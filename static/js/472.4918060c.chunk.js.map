{"version":3,"file":"static/js/472.4918060c.chunk.js","mappings":"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","sources":["webpack://yourpet-group4-frontend/./src/Components/AuthForm/AuthForm.modul.css?a5c4","Components/AuthForm/AuthForm.jsx","Pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState } from \"react\";\n\nimport styles from './AuthForm.modul.css'\n\n\nconst AuthForm = ({ onSubmit }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Валидация введенных данных\n    let emailIsValid = true;\n    let passwordIsValid = true;\n\n    if (!email.includes(\"@\")) {\n      setEmailError(\"Введите действительный email\");\n      emailIsValid = false;\n    } else {\n      setEmailError(\"\");\n    }\n\n    if (password.trim().length < 6) {\n      setPasswordError(\"Пароль должен быть не менее 6 символов\");\n      passwordIsValid = false;\n    } else {\n      setPasswordError(\"\");\n    }\n\n    // Если все данные валидны, отправляем их на сервер\n    if (emailIsValid && passwordIsValid) {\n      onSubmit({ email, password });\n    }\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n        />\n        {emailError && <div className=\"error\">{emailError}</div>}\n      </label>\n      <label>\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        />\n        {passwordError && <div className=\"error\">{passwordError}</div>}\n      </label>\n       <label>\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        />\n        {passwordError && <div className=\"error\">{passwordError}</div>}\n      </label>\n      <button className={styles.btn} type=\"submit\">Registration</button>\n    </form>\n  );\n};\n\nexport default AuthForm;\n\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AuthForm from 'Components/AuthForm/AuthForm';\n\nconst LoginPage = () => {\n  const history = useNavigate();\n\n  // Состояние для данных формы\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  // состояние для ошибок проверки\n  const [errors, setErrors] = useState({});\n\n  // Функция для обработки отправки формы\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Проверка ошибок проверки формы\n    const validationErrors = validateForm(formData);\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    // TODO: Отправить запрос на вход в бэкэнд с данными формы\n    // Если вход в систему выполнен успешно, перенаправить на UserPage\n    // Если не удается войти, показать уведомление об ошибке\n\n    history.push('/user');\n  };\n\n  // Функция для обработки изменения ввода формы\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Функция проверки данных формы\n  const validateForm = data => {\n    let errors = {};\n\n    if (!data.email) {\n      errors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) {\n      errors.email = 'Email is invalid';\n    }\n\n    if (!data.password) {\n      errors.password = 'Password is required';\n    } else if (data.password.length < 6) {\n      errors.password = 'Password should be at least 6 characters';\n    }\n\n    return errors;\n  };\n\n  return (\n    <div>\n      <AuthForm\n        title=\"Login\"\n        buttonText=\"Login\"\n        formType=\"login\"\n        formData={formData}\n        errors={errors}\n        handleSubmit={handleSubmit}\n        handleInputChange={handleInputChange}\n        navigationLink=\"/register\"\n        navigationText=\"Don't have an account? Register here\"\n      />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["_ref","onSubmit","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","emailError","setEmailError","_useState7","_useState8","passwordError","setPasswordError","_jsxs","className","styles","event","preventDefault","emailIsValid","passwordIsValid","includes","trim","length","children","_jsx","type","value","onChange","target","history","useNavigate","formData","setFormData","errors","setErrors","validateForm","data","test","AuthForm","title","buttonText","formType","handleSubmit","e","validationErrors","Object","keys","push","handleInputChange","_objectSpread","_defineProperty","name","navigationLink","navigationText"],"sourceRoot":""}